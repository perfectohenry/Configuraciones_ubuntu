# Instalar LAMP en Ubuntu 16.04

Antes de empezar actualiza su sistema:
	sudo apt-get update && sudo apt-get upgrade

Instalar Apache 2.4 desde el repositorio de Ubuntu:
	sudo apt-get install apache2

Instalar el mysql-serverpaquete y elegir una contraseña segura cuando se le solicite:
	sudo apt-get install mysql-server

Instalar PHP7, la extensión de PHP y repositorio de aplicaciones, soporte de Apache, MySQL y soporte:
	sudo apt-get install php-pear php libapache2-mod-php php-mcrypt php-mysql

Opcionalmente, instale el enrollamiento adicional, JSON, y el apoyo CGI:
	sudo apt-get install php-rizo php-JSON php-cgi

En la mayoría de los casos, vamos a querer modificar la forma en que Apache proporciona archivos cuando se solicita un directorio. Actualmente, si un usuario solicita un directorio del servidor, Apache buscará primero un archivo llamado index.html. Queremos decirle a nuestro servidor web a preferir los archivos PHP, así que haremos que Apache busque un index.php archivo primero.
Para ello, escriba este comando para abrir el dir.conf archivo en un editor de texto con privilegios de root:
	sudo nano /etc/apache2/mods-enabled/dir.conf

Se parece a esto:
	<IfModule mod_dir.c>
	    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
	</IfModule>

Queremos mover el archivo de índice de PHP se indica arriba a la primera posición después de la DirectoryIndex especificación, así:
	<IfModule mod_dir.c>
	    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
	</IfModule>

Cuando haya terminado, guarde y cierre el archivo presionando Ctrl-X . Vas a tener que confirmar el salve escribiendo Y y luego pulsa Enter para confirmar la ubicación de almacenamiento de archivos.
Después de esto, tenemos que reiniciar el servidor web Apache para que nuestros cambios sean reconocidos. Puede hacerlo escribiendo esto:
	sudo systemctl restart apache2

Instalación de módulos de PHP
Si decidimos que php-clies algo que necesitamos, podemos escribir:
	sudo apt-get install php-cli
	sudo apt-get install package1 package2 ...


Prueba de Procesamiento de PHP en el servidor Web

Con el fin de probar que nuestro sistema está configurado correctamente para PHP, podemos crear un script PHP muy básico.

Vamos a llamar a este script info.php. Con el fin de Apache para buscar el archivo y servir correctamente, se debe guardar en un directorio muy específico, que se llama la "raíz web".

En Ubuntu 16.04, este directorio se encuentra en /var/www/html/. Podemos crear el archivo en esa ubicación escribiendo:
	sudo nano /var/www/html/info.php

	Esto abrirá un archivo en blanco. Queremos poner el texto siguiente, que es el código PHP válido, dentro del archivo:

		<?php
			phpinfo();

	Cuando haya terminado, guarde y cierre el archivo.

	Ahora podemos probar si nuestro servidor web puede visualizar correctamente el contenido generado por un script PHP. Para probar esto, sólo tenemos que visitar esta página en nuestro navegador web. Necesitará la dirección IP pública del servidor de nuevo.


phpMyAdmin está disponible en los repositorios por defecto del sistema operativo Ubuntu. Una vez LAMP está instalado y listo, instale phpMyAdmin como se muestra a continuación:
	
	sudo apt-get install phpmyadmin php-mbstring php-gettext

	Durante la instalación, se le pedirá que elija el servidor web que debe ser configurado automáticamente para ejecutar phpMyAdmin. En nuestro caso, es Apache servidor web.

	Elija apache2 y haga clic en OK.

	Seleccione Sí y pulse Enter para configurar la base de datos de phpMyAdmin con dbconfig-común.

	Introducir una contraseña para phpmyadmin para registrarse con el servidor de base de datos. Si se deja en blanco, se generará una contraseña aleatoria.

	Vuelva a introducir la contraseña para confirmar.

	A continuación, cambie el archivo de servidor web de configuración de Apache:
		sudo nano /etc/apache2/apache2.conf

	Agregue la siguiente línea al final:
		Include /etc/phpmyadmin/apache.conf

	Guarde y cierre el archivo. Reiniciar el servicio de Apache para tener efecto los cambios.
		sudo systemctl restart apache2



link:
	Ubuntu 14.04
		https://styde.net/como-instalar-lamp-en-ubuntu-linux/




