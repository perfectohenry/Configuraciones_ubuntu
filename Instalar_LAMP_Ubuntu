# Instalar LAMP en Ubuntu 16.04

Antes de empezar actualiza su sistema:
	sudo apt-get update && sudo apt-get upgrade

Instalar Apache 2.4 desde el repositorio de Ubuntu:
	sudo apt-get install apache2

Instalar el mysql-serverpaquete y elegir una contraseña segura cuando se le solicite:
	sudo apt-get install mysql-server

Instalar PHP7, la extensión de PHP y repositorio de aplicaciones, soporte de Apache, MySQL y soporte:
	sudo apt-get install php-pear php libapache2-mod-php php-mcrypt php-mysql

Opcionalmente, instale el enrollamiento adicional, JSON, y el apoyo CGI:
	sudo apt-get install php-rizo php-JSON php-cgi

En la mayoría de los casos, vamos a querer modificar la forma en que Apache proporciona archivos cuando se solicita un directorio. Actualmente, si un usuario solicita un directorio del servidor, Apache buscará primero un archivo llamado index.html. Queremos decirle a nuestro servidor web a preferir los archivos PHP, así que haremos que Apache busque un index.php archivo primero.
Para ello, escriba este comando para abrir el dir.conf archivo en un editor de texto con privilegios de root:
	sudo nano /etc/apache2/mods-enabled/dir.conf

Se parece a esto:
	<IfModule mod_dir.c>
	    DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
	</IfModule>

Queremos mover el archivo de índice de PHP se indica arriba a la primera posición después de la DirectoryIndex especificación, así:
	<IfModule mod_dir.c>
	    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
	</IfModule>

Cuando haya terminado, guarde y cierre el archivo presionando Ctrl-X . Vas a tener que confirmar el salve escribiendo Y y luego pulsa Enter para confirmar la ubicación de almacenamiento de archivos.
Después de esto, tenemos que reiniciar el servidor web Apache para que nuestros cambios sean reconocidos. Puede hacerlo escribiendo esto:
	sudo systemctl restart apache2

Instalación de módulos de PHP
Si decidimos que php-clies algo que necesitamos, podemos escribir:
	sudo apt-get install php-cli
	sudo apt-get install package1 package2 ...


Prueba de Procesamiento de PHP en el servidor Web

Con el fin de probar que nuestro sistema está configurado correctamente para PHP, podemos crear un script PHP muy básico.

Vamos a llamar a este script info.php. Con el fin de Apache para buscar el archivo y servir correctamente, se debe guardar en un directorio muy específico, que se llama la "raíz web".

En Ubuntu 16.04, este directorio se encuentra en /var/www/html/. Podemos crear el archivo en esa ubicación escribiendo:
	sudo nano /var/www/html/info.php

	Esto abrirá un archivo en blanco. Queremos poner el texto siguiente, que es el código PHP válido, dentro del archivo:

		<?php
			phpinfo();

	Cuando haya terminado, guarde y cierre el archivo.

	Ahora podemos probar si nuestro servidor web puede visualizar correctamente el contenido generado por un script PHP. Para probar esto, sólo tenemos que visitar esta página en nuestro navegador web. Necesitará la dirección IP pública del servidor de nuevo.


phpMyAdmin está disponible en los repositorios por defecto del sistema operativo Ubuntu. Una vez LAMP está instalado y listo, instale phpMyAdmin como se muestra a continuación:
	
	sudo apt-get install phpmyadmin php-mbstring php-gettext

	Durante la instalación, se le pedirá que elija el servidor web que debe ser configurado automáticamente para ejecutar phpMyAdmin. En nuestro caso, es Apache servidor web.

	Elija apache2 y haga clic en OK.

	Seleccione Sí y pulse Enter para configurar la base de datos de phpMyAdmin con dbconfig-común.

	Introducir una contraseña para phpmyadmin para registrarse con el servidor de base de datos. Si se deja en blanco, se generará una contraseña aleatoria.

	Vuelva a introducir la contraseña para confirmar.

	A continuación, cambie el archivo de servidor web de configuración de Apache:
		sudo nano /etc/apache2/apache2.conf

	Agregue la siguiente línea al final:
		Include /etc/phpmyadmin/apache.conf

	Guarde y cierre el archivo. Reiniciar el servicio de Apache para tener efecto los cambios.
		sudo systemctl restart apache2



link:
	Ubuntu 14.04
		https://styde.net/como-instalar-lamp-en-ubuntu-linux/

		https://www.linode.com/docs/websites/lamp/install-lamp-on-ubuntu-16-04

		https://www.digitalocean.com/community/tutorials/como-configurar-virtual-host-de-apache-en-ubuntu-14-04-lts-es




# Instalar LAMP en Ubuntu 14.04

Introducción
LAMP, es el stack más utilizado como entorno de desarrollo para programar
aplicaciones. El término es actualmente el acrónimo de Linux, que representa el
sistema operativo, Apache como servidor Web. Toda la información guardada en
MySQL y el contenido es procesado por PHP.

Paso 1. Instalar Apache

	El servidor web Apache es actualmente el servidor web más popular en el mundo,
	lo que hace que sea una gran opción por defecto para alojar un sitio web.

	Podemos instalar fácilmente Apache utilizando el administrador de paquetes, apt.
	Un administrador de paquetes nos permite instalar software desde los
	repositorios mantenidos por Ubuntu.

	Escribe en la terminal, los siguientes comandos:
		sudo apt-get update
		sudo apt-get install apache2

		Para poder configurar nuestro servidor se usa la siguiente sintaxis:
			sudo service apache2 [start | restart | stop | status]

Paso 2. Instalar MySQL
	Ahora que ya tenemos nuestro servidor web funcionando y activo, es hora de
	instalar MySQL. MySQL es un gestor de base de datos. Básicamente organizará y
	proveerá de acceso a todas las bases de datos donde nuestros sitios guarden
	información. De nuevo, usaremos apt para instalar nuestro servicio. Esta vez
	también instalaremos algunos paquetes más que nos ayudarán que nuestros
	componentes se comuniquen entre ellos:
		sudo apt-get install mysql-server php5-mysql

	Cuando la instalación esté finalizada es necesario realizar unas cuantas
	configuraciones para que nuestro servidor MySQL esté un poco más seguro.
		sudo mysql_install_db

	Después de eso, necesitaremos ejecutar un script que remueva algunos valores
	de acceso por defecto a nuestras bases de datos. Escribe lo siguiente en la
	terminal:
		sudo mysql_secure_installation

	Durante la ejecución se te preguntará la contraseña que estableciste
	anteriormente al usuario root de MySQL. Después se te solicitará si deseas
	cambiar la contraseña. Si quieres mantener la misma puedes escribir “n” para
	“no”.

	Para el resto de las preguntas bastará con teclear ENTER y la instalación
	guardará los valores por defectos para esas opciones. Esto removerá los
	ejemplos de las bases de datos, accesos remotos, y algunas nuevas reglas que
	MySQL interpretará inmediatamente y realizará los cambios correspondientes.


Paso 3. Instalar PHP
	PHP es el lenguaje de programación que nos ayudará a realizar los sitios
	web. Puede ejecutar scripts, conectarse a la base de datos MySQL y procesar
	todo nuestro contenido del lado del servidor.

	Haremos uso una vez más del paquete apt para instalar todas las librerias
	correspondientes.
		sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt

	Esto instalará PHP sin problemas.

Paso 4. Dar preferencia al archivo index.php
	En la mayoría de los casos será mejor modificar la manera en que Apache
	busca la dirección de algún directorio solicitado. Normalmente, si un
	usuario solicita un directorio al servidor, lo primero que hará Apache es
	buscar un archivo de nombre index.html. Tenemos que decirle a Apache que
	estamos interesador en que primero busque los archivos index.php.

	Para hacer esto, escribimos en la terminal lo siguiente.

		sudo gedit /etc/apache2/mods-enabled/dir.conf

	Deberá verse como esto:
		DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm
	
	Moveremos la posicion de index.php hasta la primera.
		DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm

	Guardaremos el archivo y reiniciaremos el servidor Apache para que aplique
	esos cambios a la configuración.
		sudo service apache2 restart

	


